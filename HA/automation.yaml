# ------------------- living room sunset new -------------------
  - alias: joiner_livingroom_in2
    initial_state: True
    trigger:
      platform: sun
      event: sunset
      offset: "-00:30:00"
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'on'
        - condition: state
          entity_id: 'binary_sensor.g_motion_10m'
          state: 'on'
    action:
      - service: light.turn_on
        entity_id: 
          - light.joiner_livingroom
# ----------------------------------------------------------
# ----------------------------------------------------------

# ----------------------------------------------------------
# -------------------- alarm system ------------------------
# ----------------------------------------------------------
# --------------------- rearm new ------------------------------
  - alias: rearm_alarm_system
    initial_state: True
    trigger:
      - platform: state
        entity_id: binary_sensor.someone_is_home
        to: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.alarm_System
# --------------------- rearm new ------------------------------
# --------------------- un-arm new ------------------------------
  - alias: dearm_alarm_system
    initial_state: True
    trigger:
      - platform: mqtt
        topic: "alarm/dearm"
    action:
      - service_template: >
          {% if trigger.payload=="ON" %} 
            homeassistant.turn_on
          {% else %} 
            homeassistant.turn_off
          {% endif %} 
        entity_id: input_boolean.alarm_System
# --------------------- un-arm ------------------------------
# ---------------------------------------------------------
# ------------------- value trigger for leakage new ------------
  - alias: 'leakage'
    initial_state: 'on'
    trigger:
     - platform: numeric_state
       entity_id: sensor.dev13_adc
       below: 500
    action:
     service: notify.pb
     data:
       title: "Leakage detected"
       message: "Leakage triggered"
# ------------------- value trigger for leakage ------------
# ----------------------------------------------------------
#-------------------- night lights -------------------------
  - alias: night_light
    initial_state: True
    trigger:
      - platform: sun           # off 5 min after sunrise
        event: sunrise
        offset: "+00:0:00"
      - platform: sun           # on 5 min after sunset
        event: sunset
        offset: "+00:5:00"
    action:
      - service_template: >
          {% if is_state('sun.sun','below_horizon') %} 
            light.turn_on                
          {% else %} 
            light.turn_off
          {% endif %}
        entity_id: 
          - light.night
