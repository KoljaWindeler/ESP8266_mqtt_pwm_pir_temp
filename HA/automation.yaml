# ------------------- autoload theme ------------------------
  - alias: 'Set theme at startup'
    initial_state: 'on'
    trigger:
     - platform: homeassistant
       event: start
    action:
      service: frontend.set_theme
      data:
        name: darkorange
# ------------------- autoload theme ------------------------
# ------------------- entrance Room HAUSTUER ----------------
  - alias: entrance_frontdoor_inside
    initial_state: True
    hide_entity: False
    trigger: # trigger twice, whenever the motion sensors are off for 2 min
      - platform: state
        entity_id: binary_sensor.dev6_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 2
          seconds: 0
      - platform: state
        entity_id: binary_sensor.dev6_motion
        to: 'on'
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev6_motion','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev12
# ------------------- entrance Room HAUSTUER ----------------
# ------------------- carlo --------------------------------
  - alias: carlo_light_on_motion
    initial_state: True
    hide_entity: False
    trigger: # trigger twice, whenever the motion sensors are off for 10min
      - platform: state
        entity_id: binary_sensor.dev8_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
      - platform: state
        entity_id: binary_sensor.dev8_motion
        to: 'on'
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev8_motion','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev55
#          - light.dev18_simple_rainbow
# ------------------- carlo --------------------------------
# ------------------- living room sunset -------------------
  - alias: joiner_livingroom_in
    initial_state: True
    hide_entity: False
    trigger:
      - platform: mqtt
        topic: "dev23/r/button"
    action:
      service: light.toggle
      entity_id: light.joiner_livingroom
# ----------------------------------------------------------
  - alias: joiner_livingroom_in2
    initial_state: True
    hide_entity: False
    trigger:
      platform: sun
      event: sunset
      offset: "-00:30:00"
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'on'
        - condition: state
          entity_id: 'binary_sensor.g_motion_10m'
          state: 'on'
    action:
      - service: light.turn_on
        entity_id: 
          - light.joiner_livingroom
# ----------------------------------------------------------
# --------------- bedroom ----------------------------------
  - alias: joiner_bedroom_in
    initial_state: True
    hide_entity: False
    trigger:
      - platform: mqtt
        topic: "dev16/r/button"
      - platform: mqtt
        topic: "dev20/r/button"
      - platform: mqtt
        topic: "dev3/r/button"
    action:
      service: light.toggle
      entity_id: light.joiner_bedroom
# ----------------------------------------------------------
  - alias: joiner_bedroom_in2
    initial_state: True
    hide_entity: False
    trigger:
      platform: sun
      event: sunrise
      offset: "+00:15:00"
    action:
      - service: homeassistant.turn_off
        entity_id: 
          - light.joiner_bedroom
# ----------------------------------------------------------
# ------------------- kueche -------------------------------
  - alias: joiner_kitchen_in
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev4_motion
        to: 'on'
      - platform: state
        entity_id: binary_sensor.dev14_motion
        to: 'on'
    action:
      service: light.turn_on
      entity_id: light.joiner_kitchen
# ----------------------------------------------------------
  - alias: joiner_kitchen_in2
    initial_state: True
    hide_entity: False
    trigger: # trigger twice, whenever the motion sensors are off for 10min
      - platform: state
        entity_id: binary_sensor.dev4_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
      - platform: state
        entity_id: binary_sensor.dev14_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    condition: # make sure that BOTH sensors show off
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.dev4_motion
          state: 'off'
          for: 
              hours: 0
              minutes: 10
              seconds: 0
        - condition: state
          entity_id: binary_sensor.dev14_motion
          state: 'off'
          for: 
              hours: 0
              minutes: 10
              seconds: 0
    action:
      service: light.turn_off
      entity_id: light.joiner_kitchen
# ------------------- kitchen movement ---------------------
# ----------------------------------------------------------
# ------------------- couch  movement ---------------------
  - alias: couch_automation
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev101_motion
        to: 'on'
      - platform: state
        entity_id: binary_sensor.dev101_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev101_motion','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev101 
# ------------------- couch  movement ---------------------
# ----------------------------------------------------------
# ------------------- palette  movement ---------------------
  - alias: palette_automation
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: light.joiner_livingroom
      - platform: state
        entity_id: binary_sensor.dev22_motion
        to: 'on'
      - platform: state
        entity_id: binary_sensor.dev22_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev22_motion','on') or is_state('light.joiner_livingroom','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev22
# ------------------- palette  movement ---------------------
# ----------------------------------------------------------
# ------------------- entrance  movement -------------------
  - alias: entrance_automation
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev102_motion
        to: 'on'
      - platform: state
        entity_id: binary_sensor.dev102_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev102_motion','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev102 
# ------------------- entrace  movement -------------------
# ----------------------------------------------------------
# ------------------- tv  movement -------------------
  - alias: tv_automation
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev103_motion
        to: 'on'
      - platform: state
        entity_id: binary_sensor.dev103_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev103_motion','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev103 
# ------------------- tv  movement -------------------
# ----------------------------------------------------------
# ------------------- dragonfly  movement -------------------
  - alias: dragonfly_automation
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev106_motion
        to: 'on'
      - platform: state
        entity_id: binary_sensor.dev106_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev106_motion','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev106 
# ------------------- dragonfly  movement -------------------
# ----------------------------------------------------------
# -------------------- hallway movement --------------------
# ------ Turn_on_hallwayU_lights_when_there_is_movement ----
  - alias: joiner_hallwayU_in
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev10_motion
        to: 'on'
      - platform: state
        entity_id: binary_sensor.dev10_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 2
          seconds: 0
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: light.joiner_hallwayU
          state: 'on'
        - condition: time
          before: '23:00:00'
          after: '06:00:00'
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev10_motion','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.joiner_hallwayU 
# ----------------------------------------------------------
# -- alias: Turn_off_hallwayU_lights_10min_after_movement --
  - alias: joiner_hallwayU_in2
    initial_state: True
    hide_entity: False
    trigger:
      - platform: mqtt
        topic: "dev16/r/button"
    condition:
      - condition: state
        entity_id: light.joiner_bedroom
        state: 'on'
    action:
      service: homeassistant.turn_off
      entity_id: light.joiner_hallwayU
# ----------------------------------------------------------
# ----------------------------------------------------------
# -- alias: Turn_on_hallwayD_lights_when_there_is_movement -
  - alias: joiner_hallwayD_in
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev15_motion
        to: 'on'
      - platform: state
        entity_id: binary_sensor.dev15_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 5
          seconds: 0
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev15_motion','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.joiner_hallwayD
# ----------------------------------------------------------
# ----------------------------------------------------------

# ----------------------------------------------------------
# -------------------- alarm system ------------------------
# ----------------------------------------------------------
# --------------------- rearm ------------------------------
  - alias: rearm_alarm_system
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.someone_is_home
        to: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.alarm_System
# --------------------- rearm ------------------------------
# --------------------- un-arm ------------------------------
  - alias: dearm_alarm_system
    initial_state: True
    hide_entity: False
    trigger:
      - platform: mqtt
        topic: "alarm/dearm"
    action:
      - service_template: >
          {% if trigger.payload=="ON" %} 
            homeassistant.turn_on
          {% else %} 
            homeassistant.turn_off
          {% endif %} 
        entity_id: input_boolean.alarm_System
# --------------------- un-arm ------------------------------
# ----------------------------------------------------------

# ------------------- value trigger for leakage ------------
  - alias: 'leakage'
    initial_state: 'on'
    trigger:
     - platform: numeric_state
       entity_id: sensor.dev13_adc
       below: 500
    action:
     service: notify.pb
     data:
       title: "Leakage detected"
       message: "Leakage triggered"
# ------------------- value trigger for leakage ------------
# ------------------- value trigger for over temp ----------
  - alias: 'over temp'
    initial_state: 'on'
    trigger:
     - platform: numeric_state
       entity_id: sensor.dev11_temperature
       above: 50
     - platform: numeric_state
       entity_id: sensor.dev1_temperature
       above: 50
     - platform: numeric_state
       entity_id: sensor.dev16_temperature
       above: 50
     - platform: numeric_state
       entity_id: sensor.dev4_temperature
       above: 50
     - platform: numeric_state
       entity_id: sensor.dev2_temperature
       above: 50
     - platform: numeric_state
       entity_id: sensor.dev10_temperature
       above: 50
     - platform: numeric_state
       entity_id: sensor.dev9_temperature
       above: 50
    action:
     service: notify.pb
     data:
       title: "over temp detected"
       message: "over temp triggered"
# ------------------- value trigger for over temp ----------
# ------------------- outdoor light ------------------------
  - alias: outdoor_light2
    initial_state: True
    hide_entity: False
    trigger:
      - platform: time          # on at 6:30
        hours: 6
        minutes: 30
        seconds: 00
      - platform: sun           # off 30 min after sunrise
        event: sunrise
        offset: "+00:30:00"
      - platform: sun           # on 15 min after sunset
        event: sunset
        offset: "+00:15:00"
      - platform: state         # off when everyone is home after 22:00, triggered by presents (if that happens after 22:00)
        entity_id: binary_sensor.everyone_is_home
        to: 'on'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
      - platform: time          # off when everyone is home after 22:00, triggered by time (if everyone was home already)
        hours: 22
        minutes: 00
        seconds: 10
      - platform: time          # off for sure after 23:00
        hours: 23
        minutes: 00
        seconds: 01
    action:
          # sun below horizon and time>23:00: off
          # sun below horizon and time>22:00 and everyone home: off
          # sun below horizon and time<22:00 on no matter who is home
          # time>6:30 and sun still below horizon: on
          #
      - service_template: >
          {% if now().hour==23 %} 
            light.turn_off
          {% elif is_state('sun.sun','below_horizon') and now().hour>=22 and is_state('binary_sensor.everyone_is_home','on') %} 
            light.turn_off                
          {% elif is_state('sun.sun','below_horizon') %}
            light.turn_on 
          {% else %} 
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev19
# ------------------- outdoor light ------------------------
# -------------------- alarm system ------------------------
# ----------------------------------------------------------
# --------------------- gmotion ----------------------------
# send message as soon as there is movement and nobody is home
  - alias: alarm_system
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.g_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_System
          state: 'on'
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'off'
        - condition: state
          entity_id: vacuum.xiaomi_vacuum_cleaner
          state: 'off'
    action:
     service: notify.pb
     data_template:
       title: "Motion detected"
       message: >
         {% for state in states.binary_sensor -%}
          {% if state.attributes.device_class == 'motion' and state.state | lower == 'on' %}- {{state.attributes.friendly_name}}
         {% endif %}
         {%- endfor %}
# --------------------- gmotion ---------------------------- 
# --------------------- 101 --------------------------------
  - alias: alarm_system_c101 
    initial_state: False
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev101_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_System
          state: 'on'
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.seq_101
# --------------------- 101 --------------------------------
# --------------------- 102 --------------------------------
  - alias: alarm_system_c102 
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev102_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_System
          state: 'on'
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.seq_102
# --------------------- 102 --------------------------------
# --------------------- 103 --------------------------------
  - alias: alarm_system_c103 
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev103_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_System
          state: 'on'
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.seq_103
# --------------------- 103 --------------------------------
# --------------------- 106 --------------------------------
  - alias: alarm_system_c106 
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev106_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_System
          state: 'on'
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.seq_106
# --------------------- 106 --------------------------------
# --------------------- alarm system -----------------------
# ----------------------------------------------------------

# ------------------- value trigger for leakage ------------------------
  - alias: 'leakage'
    initial_state: 'on'
    trigger:
     - platform: numeric_state
       entity_id: sensor.dev13_adc
       below: 500
    action:
     service: notify.pb
     data:
       title: "Leakage detected"
       message: "Leakage triggered"
# ------------------- value trigger for leakage ------------------------

# ------------------- drivetime kolja ----------------------
  - alias: inform_tavel_kolja
    initial_state: True
    hide_entity: False
    trigger:
      - platform: time
        hours: 7
        minutes: 30
        seconds: 00
    condition: # make sure that BOTH sensors show off
      - condition: numeric_state
        entity_id: sensor.to_baker
        above: 17
    action:
     service: notify.pb
     data_template:
       title: "Long traveltime"
       message: "Currently {{ states.sensor.to_baker.state }} min traveltime"
# ------------------- drivetime kolja ----------------------

#-------------------- night lights -------------------------
  - alias: night_light
    initial_state: True
    hide_entity: False
    trigger:
      - platform: sun           # off 5 min after sunrise
        event: sunrise
        offset: "+00:0:00"
      - platform: sun           # on 5 min after sunset
        event: sunset
        offset: "+00:5:00"
    action:
      - service_template: >
          {% if is_state('sun.sun','below_horizon') %} 
            light.turn_on                
          {% else %} 
            light.turn_off
          {% endif %}
        entity_id: 
          - light.night
#-------------------- night lights -------------------------
