# ------------------- autoload theme ------------------------
  - alias: 'Set theme at startup'
    initial_state: 'on'
    trigger:
     - platform: homeassistant
       event: start
    action:
      service: frontend.set_theme
      data:
        name: darkorange
# ------------------- autoload theme ------------------------

# ------------------- entrance Room ------------------------
  - alias: entranceR_test
    initial_state: True
    hide_entity: False
    trigger: # trigger twice, whenever the motion sensors are off for 10min
      - platform: state
        entity_id: binary_sensor.dev6_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 2
          seconds: 0
      - platform: state
        entity_id: binary_sensor.dev6_motion
        to: 'on'
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev6_motion','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev12
# ------------------- entrance Room ------------------------
# ------------------- carlo --------------------------------
  - alias: carlo_test
    initial_state: True
    hide_entity: False
    trigger: # trigger twice, whenever the motion sensors are off for 10min
      - platform: state
        entity_id: binary_sensor.dev8_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
      - platform: state
        entity_id: binary_sensor.dev8_motion
        to: 'on'
    action:
      - service_template: >
          {% if is_state('binary_sensor.dev8_motion','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev55
# ------------------- carlo --------------------------------
# ------------------- living room sunset -------------------
  - alias: joiner_livingroom_in2
    initial_state: True
    hide_entity: False
    trigger:
      platform: sun
      event: sunset
      offset: "-00:30:00"
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'on'
        - condition: state
          entity_id: 'binary_sensor.g_motion_10m'
          state: 'on'
    action:
      - service: light.turn_on
        entity_id: 
          - light.joiner_livingroom
# ------------------- living joiner out -------------------
  - alias: joiner_livingroom_out
    initial_state: True
    hide_entity: False
    trigger: 
      - platform: state
        entity_id: light.joiner_livingroom
    action:
      - service_template: >
          {% if is_state('light.joiner_livingroom','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev1
          - light.dev7
          - light.dev11
          - light.dev21  
# ----------------------------------------------------------
# ----------------------------------------------------------
  - alias: joiner_bedroom_in
    initial_state: True
    hide_entity: False
    trigger:
#      - platform: mqtt
#        topic: "dev3/r/button"
      - platform: mqtt
        topic: "dev16/r/button"
      - platform: mqtt
        topic: "dev20/r/button"
    action:
      service: light.toggle
      entity_id: light.joiner_bedroom
# ----------------------------------------------------------
  - alias: joiner_bedroom_in2
    initial_state: True
    hide_entity: False
    trigger:
      platform: sun
      event: sunrise
      offset: "+00:15:00"
    action:
      - service: homeassistant.turn_off
        entity_id: 
          - light.joiner_bedroom
# ----------------------------------------------------------
  - alias: joiner_bedroom_out
    initial_state: True
    hide_entity: False
    trigger: 
      - platform: state
        entity_id: light.joiner_bedroom
    action:
      - service_template: >
          {% if is_state('light.joiner_bedroom','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev20
          - light.dev3
          - light.dev16  
# ----------------------------------------------------------
  - alias: dev3_toggle_and_dev20 # dev3 can toggle 20 and 12 but keep them sync
    initial_state: True
    hide_entity: False
    trigger:
      - platform: mqtt
        topic: "dev3/r/button"
    condition: 
      - condition: state
        entity_id: light.joiner_bedroom
        state: 'on'
    action:
      - service: light.turn_off
        entity_id: 
          - light.joiner_bedroom
# ----------------------------------------------------------
  - alias: dev3_toggle_and_dev20_2 #dev3 can toggle 20 and 12 but keep them in sync
    initial_state: True
    hide_entity: False
    trigger:
      - platform: mqtt
        topic: "dev3/r/button"
    condition: 
      - condition: state
        entity_id: light.joiner_bedroom
        state: 'off'
    action:
      - service: light.turn_on
        entity_id: 
          - light.joiner_bedroom
# ----------------------------------------------------------
# ----------------------------------------------------------
  - alias: joiner_kitchen_in
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev4_motion
        to: 'on'
      - platform: state
        entity_id: binary_sensor.dev14_motion
        to: 'on'
    action:
      service: light.turn_on
      entity_id: light.joiner_kitchen
# ----------------------------------------------------------
  - alias: joiner_kitchen_in2
    initial_state: True
    hide_entity: False
    trigger: # trigger twice, whenever the motion sensors are off for 10min
      - platform: state
        entity_id: binary_sensor.dev4_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
      - platform: state
        entity_id: binary_sensor.dev14_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    condition: # make sure that BOTH sensors show off
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.dev4_motion
          state: 'off'
        - condition: state
          entity_id: binary_sensor.dev14_motion
          state: 'off'
    action:
      service: light.turn_off
      entity_id: light.joiner_kitchen
# ------------------- kitchen movement ---------------------
# ----------------------------------------------------------
# ----------------------------------------------------------
  - alias: joiner_kitchen_out
    initial_state: True
    hide_entity: False
    trigger: 
      - platform: state
        entity_id: light.joiner_kitchen
    action:
      - service_template: >
          {% if is_state('light.joiner_kitchen','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev2
          - light.dev4
          - light.dev14  
# ----------------------------------------------------------
# ----------------------------------------------------------
  - alias: next_track_lirc
    initial_state: True
    hide_entity: False
    trigger:
      platform: event
      event_type: ir_command_received
      event_data:
        button_name: KEY_RIGHT
    action:
      service: media_player.media_next_track
      entity_id: media_player.jkw_cast2
# ----------------------------------------------------------
# ----------------------------------------------------------
# ------------------ gmusic player -------------------------
  - alias: g_radion_on
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: switch.background
        to: 'on'
    action:
      - service: script.turn_on
        entity_id: script.seq_gradio_on
# ----------------------------------------------------------
  - alias: g_radion_off
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: switch.background
        to: 'off'
    action:
      - service: script.turn_on
        entity_id: script.seq_gradio_off
# ------------------ gmusic player -------------------------
# ----------------------------------------------------------


# ----------------------------------------------------------
# ------------------- couch  movement ---------------------
  - alias: Turn_on_couch_light_when_there_is_movement
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev101_motion
        to: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: light.dev101 
# ----------------------------------------------------------
  - alias: Turn_off_couch_lights_10min_after_movement
    initial_state: True
    hide_entity: False
    trigger: # trigger twice, whenever the motion sensors are off for 10min
      - platform: state
        entity_id: binary_sensor.dev101_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    action:
      service: homeassistant.turn_off
      entity_id: light.dev101 
# ------------------- couch  movement ---------------------
# ----------------------------------------------------------

# ----------------------------------------------------------
# ------------------- entrance  movement -------------------
  - alias: Turn_on_couch_light_when_there_is_movement
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev102_motion
        to: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: light.dev102 
# ----------------------------------------------------------
  - alias: Turn_off_entrance_lights_10min_after_movement
    initial_state: True
    hide_entity: False
    trigger: # trigger twice, whenever the motion sensors are off for 10min
      - platform: state
        entity_id: binary_sensor.dev102_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    action:
      service: homeassistant.turn_off
      entity_id: light.dev102 
# ------------------- entrace  movement -------------------
# ----------------------------------------------------------

# ----------------------------------------------------------
# ------------------- tv  movement ------------------------
  - alias: Turn_on_tv_light_when_there_is_movement
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev103_motion
        to: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: light.dev103
# ----------------------------------------------------------
  - alias: Turn_off_tv_lights_10min_after_movement
    initial_state: True
    hide_entity: False
    trigger: # trigger twice, whenever the motion sensors are off for 10min
      - platform: state
        entity_id: binary_sensor.dev103_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    action:
      service: homeassistant.turn_off
      entity_id: light.dev103 
# ----------------------- tv  movement ---------------------
# ----------------------------------------------------------

# ----------------------------------------------------------
# ------------------- dragonfly  movement ------------------
  - alias: Turn_on_dragonfly_light_when_there_is_movement
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev106_motion
        to: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: light.dev106 
# ----------------------------------------------------------
  - alias: Turn_off_dragonfly_lights_10min_after_movement
    initial_state: True
    hide_entity: False
    trigger: # trigger twice, whenever the motion sensors are off for 10min
      - platform: state
        entity_id: binary_sensor.dev106_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
    action:
      service: homeassistant.turn_off
      entity_id: light.dev106 
# ------------------- dragonfly  movement ------------------
# ----------------------------------------------------------

# ----------------------------------------------------------
# -------------------- hallway movement --------------------
# ------ Turn_on_hallwayU_lights_when_there_is_movement ----
  - alias: joiner_hallwayU_in
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev10_motion
        to: 'on'
#    condition:
#      condition: and
#      conditions:
#        - condition: time
#          after: '06:30:00'
#        - condition: time
#          before: '23:30:00'
    action:
      service: homeassistant.turn_on
      entity_id: light.joiner_hallwayU
# ----------------------------------------------------------
# -- alias: Turn_off_hallwayU_lights_10min_after_movement --
  - alias: joiner_hallwayU_in2
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev10_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 2
          seconds: 0
      - platform: state
        entity_id: light.joiner_bedroom
        to: 'off'
    action:
      service: homeassistant.turn_off
      entity_id: light.joiner_hallwayU
# ----------------------------------------------------------
  - alias: joiner_hallwayU_out
    initial_state: True
    hide_entity: False
    trigger: 
      - platform: state
        entity_id: light.joiner_hallwayU
    action:
      - service_template: >
          {% if is_state('light.joiner_hallwayU','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev10
# ----------------------------------------------------------
# ----------------------------------------------------------
# -- alias: Turn_on_hallwayD_lights_when_there_is_movement -
  - alias: joiner_hallwayD_in
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev15_motion
        to: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: light.joiner_hallwayD
# ----------------------------------------------------------
# -- alias: Turn_off_hallwayD_lights_10min_after_movement -
  - alias: joiner_hallwayD_in2
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev15_motion
        to: 'off'
        for: 
          hours: 0
          minutes: 5
          seconds: 0
    action:
      service: homeassistant.turn_off
      entity_id: light.joiner_hallwayD
# ----------------------------------------------------------
  - alias: joiner_hallwayD_out
    initial_state: True
    hide_entity: False
    trigger: 
      - platform: state
        entity_id: light.joiner_hallwayD
    action:
      - service_template: >
          {% if is_state('light.joiner_hallwayD','on') %}
            light.turn_on
          {% else %}
            light.turn_off
          {% endif %}
        entity_id: 
          - light.dev56
          - light.dev15
# ----------------------------------------------------------
# ----------------------------------------------------------

# ------------------------ outside -------------------------
# -------------------- outside on early ---------------------
  - alias: wakeup_dev5
    initial_state: True
    hide_entity: False
    trigger:
      - platform: time
        hours: 6
        minutes: 30
        seconds: 00
    condition:
      condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    action:
      - service: homeassistant.turn_on
        entity_id: light.dev5
# -------------------- outside off after sunrise ---------------------
  - alias: sunrise_dev5
    initial_state: True
    hide_entity: False
    trigger:
      - platform: sun
        event: sunrise
        offset: "+00:30:00"
    condition:
      condition: time
      after: '06:30:00'
    action:
      - service: homeassistant.turn_off
        entity_id: light.dev5
# -------------------- outside on dark ---------------------
# switch the light on, 15 min after sunset, but only if thats before 23:30
  - alias: sunset_dev5
    initial_state: True
    hide_entity: False
    trigger:
      platform: sun
      event: sunset
      offset: "+00:15:00"
    condition:
      condition: time
      before: '23:30:00'
    action:
      - service: homeassistant.turn_on
        entity_id: light.dev5
# ----------------------------------------------------------
# turn the lights off if both of us are at home for at least 10min and it is after 22:00
  - alias: all_home_dev5
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.everyone_is_home
        to: 'on'
        for: 
          hours: 0
          minutes: 10
          seconds: 0
      - platform: time
        hours: 22
        minutes: 00
        seconds: 10
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.everyone_is_home
          state: 'on'
        - condition: time
          after: '22:00:00'
    action:
      - service: homeassistant.turn_off
        entity_id: light.dev5
# ----------------------------------------------------------
# turn the lights of at 23:30
  - alias: midnight_dev5
    initial_state: True
    hide_entity: False
    trigger:
      platform: time
      hours: 23
      minutes: 30
      seconds: 00
    action:
      - service: homeassistant.turn_off
        entity_id: light.dev5
# -------------------- outside on dark ---------------------
# ------------------------ outside -------------------------
# ----------------------------------------------------------

# ----------------------------------------------------------
# -------------------- alarm system ------------------------
# ----------------------------------------------------------
# --------------------- rearm ------------------------------
  - alias: rearm_alarm_system
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.someone_is_home
        to: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.alarm_System
# --------------------- rearm ------------------------------
# ----------------------------------------------------------
# --------------------- gmotion ----------------------------
# send message as soon as there is movement and nobody is home
  - alias: alarm_system
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.g_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_System
          state: 'on'
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'off'
    action:
     service: notify.pb
     data:
       title: "Motion detected"
       message: "GMotion triggered"
# --------------------- gmotion ----------------------------
# --------------------- 101 --------------------------------
  - alias: alarm_system_c101 
    initial_state: False
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev101_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_System
          state: 'on'
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.seq_101
# --------------------- 101 --------------------------------
# --------------------- 102 --------------------------------
  - alias: alarm_system_c102 
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev102_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_System
          state: 'on'
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.seq_102
# --------------------- 102 --------------------------------
# --------------------- 103 --------------------------------
  - alias: alarm_system_c103 
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev103_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_System
          state: 'on'
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.seq_103
# --------------------- 103 --------------------------------
# --------------------- 106 --------------------------------
  - alias: alarm_system_c106 
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: binary_sensor.dev106_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_System
          state: 'on'
        - condition: state
          entity_id: binary_sensor.someone_is_home
          state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.seq_106
# --------------------- 106 --------------------------------
# --------------------- alarm system -----------------------
# ----------------------------------------------------------

# ------------------- value trigger for leakage ------------------------
  - alias: 'leakage'
    initial_state: 'on'
    trigger:
     - platform: numeric_state
       entity_id: sensor.dev13_adc
       below: 500
    action:
     service: notify.pb
     data:
       title: "Leakage detected"
       message: "Leakage triggered"
# ------------------- value trigger for leakage ------------------------

# --------- playground --------
  - alias: set_dimmer
    initial_state: False
    hide_entity: False
    trigger:
      platform: state
      entity_id: input_slider.dev12_dimmer_delay
    action:
      service: mqtt.publish
      data_template:
        topic: "dev12/PWM_dimm/delay/set"
        retain: true
        payload: '{{ states.input_slider.dev12_dimmer_delay.state | int }}'

